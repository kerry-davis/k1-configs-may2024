[gcode_macro PRINTER_PARAM]
variable_extruder_temp: 230
variable_extruder_cool_temp: 60
variable_heatsoak_min_temp: 70
variable_heatsoak_side_fan_target: 220
variable_heatsoak_chamber_fan_target: 70
variable_heatsoak_chamber_min: 5
variable_heatsoak_bed_target: 105
variable_heatsoak_timeout: 5
variable_heatsoak_timeout_min: 0
variable_heatsoak_heating_report_interval: 10
variable_heatsoak_soaking_report_interval: 30

variable_z_safe_pause: 0.0
variable_z_safe_g28: 10.0
variable_max_z_position: 250.0
variable_fans: 3
variable_fan2_speed: 0
variable_hotend_temp: 0
variable_e_min_current: 0.27
gcode:

[include creality_macros.cfg] 

[include macro_g28_override.cfg]

[gcode_macro M109] ; kd 270424 https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190] ; kd 270424 https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro M106]
gcode:
  {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
  {% set fan = 0 %}
  {% set value = 0 %}
  {% if params.P is defined %}
    {% set tmp = params.P|int %}
    {% if tmp < fans %}
      {% set fan = tmp %}
    {% endif %}
  {% endif %}
  {% if params.S is defined %}
    {% set tmp = params.S|float %}
  {% else %}
    {% set tmp = 255 %}
  {% endif %}
  {% if tmp > 0 %}
    {% if fan == 0 %}
      {% set value = printer["gcode_macro PRINTER_PARAM"].fan0_min + (255 - printer["gcode_macro PRINTER_PARAM"].fan0_min) / 255 * tmp %}
    {% endif %}
    {% if fan == 1 %}
      {% set value = printer["gcode_macro PRINTER_PARAM"].fan1_min + (255 - printer["gcode_macro PRINTER_PARAM"].fan1_min) / 255 * tmp %}
    {% endif %}
    {% if fan == 2 %}
      {% set value = printer["gcode_macro PRINTER_PARAM"].fan2_min + (255 - printer["gcode_macro PRINTER_PARAM"].fan2_min) / 255 * tmp %}
    {% endif %}
  {% endif %}
  {% if value >= 255 %}
    {% set value = 255 %}
  {% endif %}
  SET_PIN PIN=fan{fan} VALUE={value}

[gcode_macro M107]
gcode:
  {% set fans = printer["gcode_macro PRINTER_PARAM"].fans|int %}
  {% if params.P is defined %}
    {% if params.P|int < fans %}
      SET_PIN PIN=fan{params.P|int} VALUE=0
    {% else %}
      SET_PIN PIN=fan0 VALUE=0
    {% endif %}
  {% else %}
    SET_PIN PIN=fan0 VALUE=0
    SET_PIN PIN=fan2 VALUE=0
  {% endif %}    

[gcode_macro LOAD_MATERIAL]
gcode:
 {% set e_temp = printer['gcode_macro PRINTER_PARAM'].extruder_temp %}
  M109 S{e_temp}
  G91
  G1 E80 F180 

[gcode_macro QUIT_MATERIAL]
gcode:
  SAVE_GCODE_STATE NAME=myMoveState
  {% set e_temp = printer['gcode_macro PRINTER_PARAM'].extruder_temp %}
  M109 S{e_temp}
  G91
  G1 E20 F180
  G1 E-30 F180
  G1 E-50 F2000
  RESTORE_GCODE_STATE NAME=myMoveState

[delayed_gcode wait_temp]
# initial_duration: 2.
gcode:
  {% set cur_temp = printer.extruder.temperature %}
  {% set e_cool_temp = printer['gcode_macro PRINTER_PARAM'].extruder_cool_temp %}    

  # Check to see if the extruder temp is below the set cool temp, if it is, proceed to power off the printer
  {% if cur_temp|int < (e_cool_temp) %}
    WAIT_TEMP_END
  {% else %}
    {action_respond_info("// Current Temp -- %s \n" % (cur_temp))}
    UPDATE_DELAYED_GCODE ID=wait_temp DURATION=5
  {% endif %}

[gcode_macro WAIT_TEMP_START]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=1
  SET_PIN PIN=fan0 VALUE=210
  SET_PIN PIN=fan2 VALUE=210
  
[gcode_macro WAIT_TEMP_END]
gcode:
  UPDATE_DELAYED_GCODE ID=wait_temp DURATION=0
  M106 P0 S0
  M106 P2 S0
  UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30 ;kd 191123

[gcode_macro HOMING_CONFIG]
variable_order: "x,y,z"
variable_dowith_z: "x,y"
variable_start_zhop: 20
gcode:
  RESPOND PREFIX="info" MSG="Homing config..."

[gcode_macro HOMING_OVERRIDE_BEFORE]
gcode:
    RESPOND PREFIX="info" MSG="Homing > Before homing: {params.X} - {params.Y} - {params.Z}"

[gcode_macro HOMING_OVERRIDE_X]
gcode:
    RESPOND PREFIX="info" MSG="Homing > X"
    G90
    G990028 X0
    G91
    G0 X-5 F2000
    G90

[gcode_macro HOMING_OVERRIDE_Y]
gcode:
    RESPOND PREFIX="info" MSG="Home > Y"
    G90
    G990028 Y0
    G91
    G0 Y-5 F2000
    G90

[gcode_macro HOMING_OVERRIDE_Z]
gcode:
    RESPOND PREFIX="info" MSG="Homing > Z"
    G90
    G0 X220 Y220
    G990028 Z0
    G91
    G0 Z30
    G90

[gcode_macro HOMING_OVERRIDE_AFTER]
gcode:
    RESPOND PREFIX="info" MSG="Homing > After homing: {params.X} - {params.Y} - {params.Z}"

[gcode_macro G28]
rename_existing: G009928
gcode:
    CUSTOM_HOMING{" X=1" if params.X is defined}{" Y=1" if params.Y is defined}{" Z=1" if params.Z is defined}
    
[gcode_macro PRINT_WARMUP]
description: Perform initial homing and heating tasks
gcode:
  {action_respond_info("PRINT_WARMUP")}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default(190) | float %}
  {% set BED_TEMP = params.BED_TEMP | default(60) | float %}
  {% set TARGET_CHAMBER = params.CHAMBER_TEMP | default("10") | int %}

  {% set curr_temp = printer['temperature_sensor chamber_temp'].temperature %}

  # Only full soak if Slicer Chamber temp. provided
  {% if 'CHAMBER_TEMP' in params|upper and (params.CHAMBER_TEMP|float) %}

    # Set soak time, default 5mins      
    {% set hs_timeout = printer['gcode_macro PRINTER_PARAM'].heatsoak_timeout %}        
          
    # Turns on the side fan      
    {% set hs_sf_target = printer['gcode_macro PRINTER_PARAM'].heatsoak_side_fan_target %}
    SET_PIN PIN=fan2 VALUE={hs_sf_target}             
    
    # Set chamber fan target
    {% set hs_cf_target = printer['gcode_macro PRINTER_PARAM'].heatsoak_chamber_fan_target %}       
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber_fan" target={hs_cf_target}

  {% else %}

    # Set chamber target to minimum       
    {% set hs_ch_min = printer['gcode_macro PRINTER_PARAM'].heatsoak_chamber_min %}
    {% set TARGET_CHAMBER = hs_ch_min %}

    # Do not soak, set soak time to 0 mins       
    {% set hs_timeout = printer['gcode_macro PRINTER_PARAM'].heatsoak_timeout_min %}          
  {% endif %}    
  
  {action_respond_info("PRINT_WARMUP TARGET_CHAMBER = %s \n" % (TARGET_CHAMBER))}
  {action_respond_info("PRINT_WARMUP current_temp = %s \n" % (curr_temp))}

  # Homing,pre-warming print nozzle etc.
  M104 S150                           # set temporary nozzle temp to prevent oozing during homing
  M140 S{BED_TEMP}                    # set bed temperature
  G28                                 # home printer

  {% set hs_hr_interval = printer['gcode_macro PRINTER_PARAM'].heatsoak_heating_report_interval %}
  {% set hs_sr_interval = printer['gcode_macro PRINTER_PARAM'].heatsoak_soaking_report_interval %}

  # Perform soak
  HEAT_SOAK HEATER='heater_bed' TARGET={BED_TEMP} SOAKER='temperature_sensor chamber_temp' SOAK_TEMP={TARGET_CHAMBER} RATE=0.25 TEMP_SMOOTH=6 RATE_SMOOTH=30 COMPLETE='SOAKING_COMPLETE' CANCEL='CANCEL_PRINT' TIMEOUT={hs_timeout} HEATING_REPORT_INTERVAL={hs_hr_interval} SOAKING_REPORT_INTERVAL={hs_sr_interval}

[gcode_macro START_PRINT]
variable_prepare: 0
gcode: 
  WAIT_TEMP_END
  CLEAR_PAUSE
  {action_respond_info("START_PRINT")}

  {% if 'BED_TEMP' in params|upper and (params.BED_TEMP|float) %}
    {% set bed_temp = params.BED_TEMP %}
  {% endif %}

  {% if 'EXTRUDER_TEMP' in params|upper and (params.EXTRUDER_TEMP|float) %}
    {% set extruder_temp = params.EXTRUDER_TEMP %}
  {% endif %}
  
  G28                           ; conditional home printer
  G90                             ; Set absolute positioning mode
  M83                             ; extruder relative mode
  M140 S{bed_temp}                ; set final bed temp
  M104 S150                       ; set temporary nozzle temp to prevent oozing during homing

  BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
  
  SMART_PARK
  M190 S{bed_temp}
  M109 S{extruder_temp}

  LINE_PURGE  

[gcode_macro END_PRINT]
gcode:
  M220 S100
  M204 S500
  TURN_OFF_HEATERS
  M107 P1
  M107 P2
  END_PRINT_POINT
  WAIT_TEMP_START
  M84  